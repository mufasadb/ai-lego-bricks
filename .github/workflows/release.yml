name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-publish
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          callmebeachy/ai-lego-bricks:latest
          callmebeachy/ai-lego-bricks:${{ steps.extract_version.outputs.VERSION }}

  github-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    
    steps:
    - uses: actions/checkout@v4

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          * New features and improvements
          * Bug fixes
          * Documentation updates
          
          ## Installation
          
          ```bash
          pip install ai-lego-bricks==${{ github.ref_name }}
          ```
          
          ## Docker
          
          ```bash
          docker pull callmebeachy/ai-lego-bricks:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false